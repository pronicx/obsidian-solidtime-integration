name: Create Release

on:
  push:
    tags:
      # --- MODIFIED TRIGGER ---
      # Matches tags like 0.1.0, 1.2.3, 10.20.30, 1.2.3-beta.1 etc.
      # Avoids triggering on arbitrary tags like 'test' or 'v-something-else'
      - '[0-9]+.[0-9]+.[0-9]+*' # Loosely matches semver, including pre-releases
      # You could use a more specific regex if needed, e.g. for only final releases:
      # - '[0-9]+.[0-9]+.[0-9]+'
      # --- END MODIFIED TRIGGER ---

# Grant permission to create releases/upload assets
permissions:
  contents: write

# Environment variables to make asset names easier to manage
env:
  PLUGIN_NAME: obsidian-solidtime-integration # Change if needed

jobs:
  build-release:
    name: Build and Release Plugin
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      # 3. Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4. Build plugin
      - name: Build plugin
        run: npm run build

      # 5. Create ZIP package
      - name: Create ZIP package
        run: |
          TAG_VERSION=${GITHUB_REF_NAME}
          echo "TAG_VERSION=${TAG_VERSION}" >> $GITHUB_ENV
          zip ${{ env.PLUGIN_NAME }}-${TAG_VERSION}.zip main.js manifest.json styles.css
        shell: bash

      # 6. Create GitHub Release and Upload Assets
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }} # Use the triggering tag (e.g., 0.1.3)
          name: Release ${{ env.TAG_VERSION }} # Use the extracted version (e.g., 0.1.3)
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
          files: |
            main.js
            manifest.json
            styles.css
            ${{ env.PLUGIN_NAME }}-${{ env.TAG_VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}